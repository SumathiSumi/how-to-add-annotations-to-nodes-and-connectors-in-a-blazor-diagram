@page "/counter"

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }
}


<SfButton Content="Add Annotation" OnClick="@AddLabel"></SfButton>
<SfButton Content="Remove Annotation" OnClick="@RemoveLabel"></SfButton>
<SfDiagramComponent @ref="diagram" Height="600px" Nodes="@nodes" Connectors="@connectors" />

@code
{
    SfDiagramComponent diagram;
    // Defines diagram's connector collection.
    DiagramObjectCollection<Connector> connectors;

    // Defines diagram's node collection.
    DiagramObjectCollection<Node> nodes;

    protected override void OnInitialized()
    {
        nodes = new DiagramObjectCollection<Node>();
        Node node1 = new Node()
            {
                ID="node1",
                Width = 120,
                Height = 40,
                OffsetX = 450,
                OffsetY = 80,
                Shape = new BasicShape() { Type= NodeShapes.Basic, Shape= NodeBasicShapes.Ellipse},
                Style = new ShapeStyle() { Fill = "#6495ED", StrokeColor = "white" },
                Annotations = new DiagramObjectCollection<ShapeAnnotation>()
            {
                // Annotation is created and stored in Annotations collection of Node.
                new ShapeAnnotation { 
                    Content = "Start",
                     Hyperlink = new HyperlinkSettings
                    {
                       // Content = "Syncfusion",
                        Url = "https://www.syncfusion.com"
                    },
                    Style = new TextStyle
                    {
                        TextWrapping = TextWrap.WrapWithOverflow
                    },
                    
                 Margin = new DiagramThickness() { Top = 10}

                }
            }
            };
        nodes.Add(node1);

        Node node2 = new Node()
            {
                ID="node2",
                Width = 200,
                Height = 40,
                OffsetX = 440,
                OffsetY = 180,
                Style = new ShapeStyle() { Fill = "#6495ED", StrokeColor = "white" },
                Shape = new BasicShape() { Type = NodeShapes.Basic, Shape = NodeBasicShapes.Parallelogram },
                Annotations = new DiagramObjectCollection<ShapeAnnotation>()
            {
                // Annotation is created and stored in Annotations collection of Node.
                new ShapeAnnotation { Content = "Enter a variable" }
            }
            };
        nodes.Add(node2);

        Node node3 = new Node()
            {
                ID = "node3",
                Width = 160,
                Height = 60,
                OffsetX = 440,
                OffsetY = 270,
                Style = new ShapeStyle() { Fill = "#6495ED", StrokeColor = "white" },
                Shape = new BasicShape() { Type = NodeShapes.Basic, Shape = NodeBasicShapes.Diamond },
                Annotations = new DiagramObjectCollection<ShapeAnnotation>()
            {
                // Annotation is created and stored in Annotations collection of Node.
                new ShapeAnnotation { Content = "N divisible by 2" }
            }
            };
        nodes.Add(node3);

                Node node4 = new Node()
            {
                ID = "node4",
                Width = 160,
                Height = 40,
                OffsetX = 700,
                OffsetY = 270,
                Style = new ShapeStyle() { Fill = "#6495ED", StrokeColor = "white" },
                Shape = new BasicShape() { Type = NodeShapes.Basic, Shape = NodeBasicShapes.Rectangle },
                Annotations = new DiagramObjectCollection<ShapeAnnotation>()
            {
                // Annotation is created and stored in Annotations collection of Node.
                new ShapeAnnotation { Content = "Odd number" }
            }
            };
        nodes.Add(node4);

                Node node5 = new Node()
            {
                ID = "node5",
                Width = 160,
                Height = 40,
                OffsetX = 440,
                OffsetY = 380,
                Style = new ShapeStyle() { Fill = "#6495ED", StrokeColor = "white" },
                Shape = new BasicShape() { Type = NodeShapes.Basic, Shape = NodeBasicShapes.Rectangle },
                Annotations = new DiagramObjectCollection<ShapeAnnotation>()
            {
                // Annotation is created and stored in Annotations collection of Node.
                new ShapeAnnotation { Content = "Even number" }
            }
            };
        nodes.Add(node5);
        connectors = new DiagramObjectCollection<Connector>();
        Connector connector = new Connector()
            {
                SourceID = "node1",
                TargetID ="node2",
               
                Style = new TextStyle() { StrokeColor = "#6495ED" },
           
            };
        connectors.Add(connector);
                Connector connector1 = new Connector()
            {
                SourceID = "node2",
                TargetID ="node3",
               
                Style = new TextStyle() { StrokeColor = "#6495ED" },
                
            };
        connectors.Add(connector1);
        Connector connector2 = new Connector()
            {
                SourceID = "node3",
                TargetID = "node4",
               
                Style = new TextStyle() { StrokeColor = "#6495ED" },
                Annotations = new DiagramObjectCollection<PathAnnotation>()
            {
                // Annotation is created and stored in Annotations collection of Connector.
                new PathAnnotation { 
                    Content = "If true",
                    Alignment = AnnotationAlignment.Before,
                    Displacement = new DiagramPoint() { X = 50, Y = 50 },
                }
            }
            };
        connectors.Add(connector2);
          Connector connector3 = new Connector()
            {
                SourceID = "node3",
                TargetID ="node5",
               
                Style = new TextStyle() { StrokeColor = "#6495ED" },
                Annotations = new DiagramObjectCollection<PathAnnotation>()
            {
                // Annotation is created and stored in Annotations collection of Connector.
                new PathAnnotation {
                    Content = "If false",
                    Alignment = AnnotationAlignment.After,
                    SegmentAngle = true,
                    
                    
                }
            }
               
            };
        connectors.Add(connector3);

    }

    private void AddLabel()
    {
    
            ShapeAnnotation annotation = new ShapeAnnotation { Content = "Annotation" };
            (diagram.Nodes[0].Annotations as DiagramObjectCollection<ShapeAnnotation>).Add(annotation);
        
    }
    public void RemoveLabel()
    {
        (diagram.Nodes[0].Annotations as DiagramObjectCollection<ShapeAnnotation>).RemoveAt(0);
    }
}

